{"version":3,"sources":["lib/GameObjectCollection.js","lib/GameObject.js","lib/GameSpace.js","audio/A.wav","audio/B.wav","audio/C.wav","audio/D.wav","audio/E.wav","audio/F.wav","audio/G.wav","audio/H.wav","audio/I.wav","lib/GameSound.js","nBackDropDownOptions.js","components/ControlsModal.js","components/SessionStatsModal.js","App.js","reportWebVitals.js","index.js"],"names":["GameObjectCollection","collection","this","_collection","nback","matches","i","length","cur","matchAsserted","key","possible","prev","missed","_false","GameObject","_matchAsserted","_key","bool","Error","GameSpace","_visible","Math","floor","random","GameSound","file","_sound","Audio","play","sound","A","B","C","D","E","F","G","H","I","nBackDropDownOptions","text","value","ControlsModal","React","useState","open","setOpen","Modal","closeIcon","onClose","onOpen","size","trigger","style","textDecoration","cursor","display","Icon","name","Header","Content","as","marginTop","lineHeight","href","SessionStatsModal","closeSessionStats","stats","calculateSessionStats","centered","color","fontWeight","maxNBack","visualAverage","audioAverage","App","props","saveOptions","Cookies","set","JSON","stringify","state","options","expires","saveLevel","level","saveTrials","trials","saveNBack","nBack","saveHistory","scores","date","Date","incrementNBack","setState","prevState","decrementNBack","updateNBack","e","data","incrementProgressBar","trialProgress","incrementLevel","decrementTrials","start","active","iteration","currentVisualScore","currentAudioScore","currentMissedVisualMatches","currentMissedAudioMatches","currentWrongAudioMatches","currentWrongVisualMatches","currentGameSpaces","currentGameSounds","runGameTrial","stop","id","setInterval","runTrialIteration","clearInterval","completeGameTrial","space","createRandomGameSpace","createRandomGameSound","push","setTimeout","addSessionScore","visualScore","audioScore","sessionScores","calculateCurrentScores","spaceCollection","soundCollection","possibleVisualMatches","possibleMatches","possibleAudioMatches","wrongVisualMatches","falseMatches","wrongAudioMatches","missedVisualMatches","missedMatches","missedAudioMatches","autoUpdateNBack","assertVisualMatch","assertAudioMatch","openSessionStats","showSessionStats","audioScores","map","obj","visualScores","reduce","acc","curr","max","showControlsDimmer","Number","get","parse","0","1","2","3","4","5","6","7","8","document","addEventListener","removeEventListener","console","log","Container","marginLeft","Grid","relaxed","minWidth","Column","width","textAlign","backgroundColor","borderRadius","padding","Divider","target","rel","columns","celled","Row","height","className","Button","onClick","blur","fluid","Progress","percent","content","mobile","Dropdown","simple","placeholder","onChange","Checkbox","label","toggle","checked","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17845085.chunk.js","sourcesContent":["/*\nThe GameObjectCollection provides a set of methods \nfor calculating scores from an array of either GameSounds or GameSpaces \n*/\n\nclass GameObjectCollection {\n  constructor(collection = []) {\n    this._collection = collection\n  }\n\n  get collection() {\n    return this._collection\n  }\n\n  /**\n   * Calculate matches from game data\n   * @param {Number} nback - number back from current game iteration to check for matches\n   * @returns {Number}\n   */\n  matches(nback) {\n    let matches = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (prev.key === cur.key) {\n          matches += 1\n        }\n      }\n    }\n    return matches\n  }\n\n  /**\n   * Calculate all possible matches contained in the collection\n   * @param {Number} nback - number back from current game iteration to check for matches\n   * @returns {Number}\n   */\n  possibleMatches(nback) {\n    let possible = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      const prev = this._collection[i - nback]\n      if (cur.key === prev.key) {\n        possible += 1\n      }\n    }\n    return possible\n  }\n\n  /**\n   * Calculate all missed matches in the collection\n   * @param {Number} nback - number back from current game iteration to check for matches\n   */\n  missedMatches(nback) {\n    let missed = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (!cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (cur.key === prev.key) {\n          missed += 1\n        }\n      }\n    }\n    return missed\n  }\n\n  /**\n   * Calculate wrongly asserted matches\n   * @param {Number} nBack - number back from current game iteration to check for false matches\n   * @returns {Number}\n   */\n  falseMatches(nback) {\n    let _false = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (prev.key !== cur.key) {\n          _false += 1\n        }\n      }\n    }\n    return _false\n  }\n}\n\nexport default GameObjectCollection\n","class GameObject {\n  constructor(key) {\n    this._matchAsserted = null\n    this._key = key\n  }\n\n  set matchAsserted(bool) {\n    if (typeof bool !== \"boolean\") {\n      throw new Error(\"Must be a boolean type\")\n    }\n    this._matchAsserted = bool\n  }\n\n  get matchAsserted() {\n    return this._matchAsserted\n  }\n\n  get key() {\n    return this._key\n  }\n}\n\nexport default GameObject\n","import GameObject from \"./GameObject\"\n\nclass GameSpace extends GameObject {\n  /**\n   * Constructor\n   * @param {Number} key - identifier for game object\n   */\n  constructor(key) {\n    super(key)\n    this._visible = false\n  }\n\n  get index() {\n    return this._key\n  }\n\n  set visible(bool) {\n    if (typeof bool !== \"boolean\") {\n      throw new Error(\"Must pass a boolean\")\n    }\n    this._visible = bool\n  }\n\n  get visible() {\n    return this._visible\n  }\n\n  /**\n   * Generate a GameSpace object with a random key\n   * @returns {Object} created random GameSpace\n   */\n  static createRandomGameSpace() {\n    const key = Math.floor(Math.random() * 9)\n    return new GameSpace(key)\n  }\n}\n\nexport default GameSpace\n","export default __webpack_public_path__ + \"static/media/A.f71bd597.wav\";","export default __webpack_public_path__ + \"static/media/B.e974a562.wav\";","export default __webpack_public_path__ + \"static/media/C.513e6b56.wav\";","export default __webpack_public_path__ + \"static/media/D.4919c469.wav\";","export default __webpack_public_path__ + \"static/media/E.035e9050.wav\";","export default __webpack_public_path__ + \"static/media/F.b24612a7.wav\";","export default __webpack_public_path__ + \"static/media/G.9522d041.wav\";","export default __webpack_public_path__ + \"static/media/H.d051f82b.wav\";","export default __webpack_public_path__ + \"static/media/I.96e7c52f.wav\";","import A from \"../audio/A.wav\"\nimport B from \"../audio/B.wav\"\nimport C from \"../audio/C.wav\"\nimport D from \"../audio/D.wav\"\nimport E from \"../audio/E.wav\"\nimport F from \"../audio/F.wav\"\nimport G from \"../audio/G.wav\"\nimport H from \"../audio/H.wav\"\nimport I from \"../audio/I.wav\"\nimport GameObject from \"./GameObject\"\n\nclass GameSound extends GameObject {\n  constructor(file, key) {\n    super(key)\n    this._sound = new Audio(file)\n  }\n\n  /**\n   * Run sound file\n   */\n  play() {\n    this._sound.play()\n  }\n\n  /**\n   * Generate a random GameSound object\n   * @returns {Object} GameSound\n   */\n  static createRandomGameSound() {\n    const files = [\n      { sound: A, key: \"A\" },\n      { sound: B, key: \"B\" },\n      { sound: C, key: \"C\" },\n      { sound: D, key: \"D\" },\n      { sound: E, key: \"E\" },\n      { sound: F, key: \"F\" },\n      { sound: G, key: \"G\" },\n      { sound: H, key: \"H\" },\n      { sound: I, key: \"I\" },\n    ]\n\n    const file = files[Math.floor(Math.random() * 9)]\n\n    return new GameSound(file.sound, file.key)\n  }\n}\n\nexport default GameSound\n","const nBackDropDownOptions = [\n  {\n    key: 0,\n    text: \"1 Back\",\n    value: 1,\n  },\n  {\n    key: 1,\n    text: \"2 Back\",\n    value: 2,\n  },\n  {\n    key: 2,\n    text: \"3 Back\",\n    value: 3,\n  },\n  {\n    key: 3,\n    text: \"4 Back\",\n    value: 4,\n  },\n  {\n    key: 4,\n    text: \"5 Back\",\n    value: 5,\n  },\n  {\n    key: 5,\n    text: \"6 Back\",\n    value: 6,\n  },\n  {\n    key: 6,\n    text: \"7 Back\",\n    value: 7,\n  },\n  {\n    key: 7,\n    text: \"8 Back\",\n    value: 8,\n  },\n  {\n    key: 8,\n    text: \"9 Back\",\n    value: 9,\n  },\n  {\n    key: 9,\n    text: \"10 Back\",\n    value: 10,\n  },\n  {\n    key: 10,\n    text: \"11 Back\",\n    value: 11,\n  },\n  {\n    key: 11,\n    text: \"12 Back\",\n    value: 12,\n  },\n]\n\nexport default nBackDropDownOptions\n","import React from \"react\"\nimport { Header, Modal, Icon } from \"semantic-ui-react\"\n\nexport default function ControlsModal() {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      closeIcon\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={\n        <span>\n          <p\n            style={{\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n            }}\n          >\n            How to play\n          </p>\n          <Icon name=\"question circle\" />\n        </span>\n      }\n    >\n      <Modal.Header>How To Play</Modal.Header>\n      <Modal.Content>\n        <Header as=\"h2\">Controls</Header>\n        <p>Press Spacebar to start the game</p>\n        <p>Press ESC to stop</p>\n\n        <Header style={{ marginTop: \"40px\" }} as=\"h2\">\n          How To Play\n        </Header>\n        <p style={{ lineHeight: \"1.4\" }}>\n          The game requires the player to watch a series of flashing spaces on a\n          grid, while simultaneously listening to a series of sounds. The player\n          must match the last shown grid space and the last played sound with\n          the grid space and sound N iterations back in the sequence. For\n          instance, if the last sound played was \"B\" and the current N-back\n          level is 2, then you must try to remember if the sound played two\n          backward in the sequence was also \"B\" and if so, assert a match. The\n          game tests and builds working memory.\n        </p>\n        <p>\n          For more information about working memory and a useful tutorial, view{\" \"}\n          <a href=\"https://www.youtube.com/watch?v=uOncXapT-j4&ab_channel=MarkAshtonSmith%2CPh.D.\">\n            this YouTube video.\n          </a>\n        </p>\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React from \"react\"\nimport { Header, Modal, Icon } from \"semantic-ui-react\"\n\nexport default function SessionStatsModal({\n  open,\n  closeSessionStats,\n  calculateSessionStats,\n}) {\n  const stats = calculateSessionStats()\n\n  return (\n    <Modal\n      closeIcon\n      onClose={() => closeSessionStats()}\n      open={open}\n      size=\"small\"\n      centered={false}\n    >\n      <Modal.Header>\n        <Icon name=\"check circle\" color=\"green\" size=\"big\" />\n        <Header style={{ display: \"inline-block\" }} as=\"h2\">\n          Session Complete!\n        </Header>\n      </Modal.Header>\n      <Modal.Content>\n        <p>\n          Great work! You have completed 20 sessions. Give your brain and rest\n          and come back tomorrow for your next memory workout.\n        </p>\n\n        <Header as=\"h3\">Session Breakdown:</Header>\n        <ul>\n          <li>\n            {\" \"}\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Max N-Back level</span>:{\" \"}\n              {stats.maxNBack}\n            </p>\n          </li>\n          <li>\n            {\" \"}\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Average visual score</span>:{\" \"}\n              {stats.visualAverage}\n            </p>\n          </li>\n          <li>\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Average audio score</span>:{\" \"}\n              {stats.audioAverage}\n            </p>\n          </li>\n        </ul>\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Progress,\n} from \"semantic-ui-react\"\nimport GameObjectCollection from \"./lib/GameObjectCollection\"\nimport GameSpace from \"./lib/GameSpace\"\nimport GameSound from \"./lib/GameSound\"\nimport nBackDropDownOptions from \"./nBackDropDownOptions\"\nimport Cookies from \"js-cookie\"\nimport ControlsModal from \"./components/ControlsModal\"\nimport SessionStatsModal from \"./components/SessionStatsModal\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showControlsDimmer: true,\n      showSessionStats: false,\n      active: false,\n      nBack: Number(Cookies.get(\"nBack\")) || 2,\n      iteration: -1,\n      level: Number(Cookies.get(\"level\")) || 0,\n      trials: Number(Cookies.get(\"trials\")) || 20,\n      currentVisualScore: 0,\n      currentAudioScore: 0,\n      currentMissedVisualMatches: 0,\n      currentMissedAudioMatches: 0,\n      currentWrongVisualMatches: 0,\n      currentWrongAudioMatches: 0,\n      currentGameSpaces: [],\n      currentGameSounds: [],\n      trialProgress: 0,\n      sessionScores: [],\n      options: Cookies.get(\"options\")\n        ? JSON.parse(Cookies.get(\"options\"))\n        : {\n            autoUpdateNBack: true,\n            saveHistory: false,\n          },\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.start)\n    document.addEventListener(\"keydown\", this.stop)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.start)\n    document.removeEventListener(\"keydown\", this.stop)\n  }\n\n  saveOptions = () => {\n    Cookies.set(\"options\", JSON.stringify(this.state.options), { expires: 365 })\n  }\n\n  saveLevel = () => {\n    Cookies.set(\"level\", this.state.level)\n  }\n\n  saveTrials = () => {\n    Cookies.set(\"trials\", this.state.trials)\n  }\n\n  saveNBack = () => {\n    Cookies.set(\"nBack\", this.state.nBack)\n  }\n\n  /**\n   * Save session scores and current date to a cookie\n   */\n  saveHistory = () => {\n    Cookies.set(\n      \"sessionHistory\",\n      {\n        scores: this.calculateSessionStats(),\n        date: new Date(),\n      },\n      { expires: 365 }\n    )\n  }\n\n  incrementNBack = () => {\n    this.setState((prevState) => ({\n      nBack: prevState.nBack + 1,\n    }))\n  }\n\n  decrementNBack = () => {\n    if (this.state.nBack > 1) {\n      this.setState((prevState) => ({\n        nBack: prevState.nBack - 1,\n      }))\n    }\n  }\n\n  updateNBack = (e, data) => {\n    this.setState({\n      nBack: data.value,\n    })\n  }\n\n  incrementProgressBar = () => {\n    this.setState((prevState) => ({\n      trialProgress: prevState.trialProgress + 4,\n    }))\n  }\n\n  incrementLevel = () => {\n    this.setState((prevState) => ({\n      level: prevState.level + 1,\n    }))\n  }\n\n  decrementTrials = () => {\n    if (this.state.trials > 0) {\n      this.setState((prevState) => ({\n        trials: prevState.trials - 1,\n      }))\n    }\n  }\n\n  /**\n   * Set game state to active, start the game trial\n   * @param {Object} e - SyntheticEvent\n   */\n  start = (e) => {\n    if (!this.state.active) {\n      if (e.key === \" \" || e.key === 32) {\n        this.setState(\n          {\n            active: true,\n            iteration: -1,\n            currentVisualScore: 0,\n            currentAudioScore: 0,\n            currentMissedVisualMatches: 0,\n            currentMissedAudioMatches: 0,\n            currentWrongAudioMatches: 0,\n            currentWrongVisualMatches : 0,\n            currentGameSpaces: [],\n            currentGameSounds: [],\n            trialProgress: 0,\n          },\n          () => {\n            this.incrementLevel()\n            this.decrementTrials()\n            this.runGameTrial()\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * Set active state to false to prevent next game trail iteration\n   * @param {Object} e - SyntheticEvent\n   */\n  stop = (e) => {\n    if (this.state.active) {\n      if (e.key === \"Escape\" || e.key === 27) {\n        this.setState({\n          active: false,\n        })\n      }\n    }\n  }\n\n  /**\n   * Run a series of 24 game trials\n   * Each iteration updates the iteration state and increments the progress bar\n   */\n  runGameTrial = () => {\n    const id = setInterval(() => {\n      this.setState(\n        (prevState) => ({\n          iteration: prevState.iteration + 1,\n        }),\n        this.runTrialIteration\n      )\n      if (this.state.iteration === 24 || !this.state.active) {\n        clearInterval(id)\n        this.completeGameTrial()\n      }\n    }, 3000)\n  }\n\n  /**\n   * Run a single trial iteration\n   * Makes a random space visible and plays a random game sound, then adds both to a collection\n   * One game iteration actually consists of a space iteration and a sound iteration\n   * A space becomes visible for 1 second, and a sound is played\n   */\n  runTrialIteration = () => {\n    const space = GameSpace.createRandomGameSpace()\n    const sound = GameSound.createRandomGameSound()\n    const key = space.key\n    const currentGameSpaces = this.state.currentGameSpaces\n    const currentGameSounds = this.state.currentGameSounds\n    currentGameSounds.push(sound)\n    currentGameSpaces.push(space)\n    this.setState(\n      {\n        [key]: true,\n        currentGameSpaces: currentGameSpaces,\n        currentGameSounds: currentGameSounds,\n      },\n      () => {\n        sound.play()\n      }\n    )\n    setTimeout(() => {\n      this.setState(\n        {\n          [key]: false,\n        },\n        () => {\n          this.incrementProgressBar()\n        }\n      )\n    }, 1200)\n  }\n\n  /**\n   * Save current trial scores to state\n   * @param {Number} nBack\n   * @param {Number} visualScore\n   * @param {Number} audioScore\n   */\n  addSessionScore = (nBack, visualScore, audioScore) => {\n    this.setState((prevState) => ({\n      sessionScores: [\n        ...prevState.sessionScores,\n        { nBack, visualScore, audioScore },\n      ],\n    }))\n  }\n\n  /**\n   * Calculate visual and audio scores from most recent game trial and set to state\n   * Increment or decrement nBack based on calculated scores\n   * Each wrongly asserted match results in a 5% reduction in score\n   */\n  calculateCurrentScores = () => {\n    const nBack = this.state.nBack\n    const spaceCollection = new GameObjectCollection(\n      this.state.currentGameSpaces\n    )\n    const soundCollection = new GameObjectCollection(\n      this.state.currentGameSounds\n    )\n\n    const possibleVisualMatches = spaceCollection.possibleMatches(nBack)\n    const possibleAudioMatches = soundCollection.possibleMatches(nBack)\n\n    const wrongVisualMatches = spaceCollection.falseMatches(nBack)\n    const wrongAudioMatches = soundCollection.falseMatches(nBack)\n\n    const visualScore =\n      Math.floor(\n        (spaceCollection.matches(nBack) / possibleVisualMatches) * 100\n      ) -\n        wrongVisualMatches * 5 || 0\n    const audioScore =\n      Math.floor(\n        (soundCollection.matches(nBack) / possibleAudioMatches) * 100\n      ) -\n        wrongAudioMatches * 5 || 0\n\n    const missedVisualMatches = spaceCollection.missedMatches(nBack)\n    const missedAudioMatches = soundCollection.missedMatches(nBack)\n\n    this.addSessionScore(nBack, visualScore, audioScore)\n\n    this.setState({\n      currentVisualScore: visualScore > 0 ? `${visualScore}%` : 0,\n      currentAudioScore: audioScore > 0 ? `${audioScore}%` : 0,\n      currentMissedVisualMatches: missedVisualMatches,\n      currentMissedAudioMatches: missedAudioMatches,\n      currentWrongVisualMatches: wrongVisualMatches,\n      currentWrongAudioMatches: wrongAudioMatches,\n    })\n\n    if (this.state.options.autoUpdateNBack) {\n      if (visualScore >= 70 && audioScore >= 70) {\n        this.incrementNBack()\n      }\n\n      if (visualScore < 40 && audioScore < 40 && this.state.nBack > 2) {\n        this.decrementNBack()\n      }\n    }\n  }\n\n  /**\n   * On completion of game trial create instances of GameSpaceCollection and GameSoundCollection\n   * For calculation of scores\n   */\n  completeGameTrial() {\n    setTimeout(() => {\n      this.setState(\n        {\n          active: false,\n        },\n        () => {\n          console.log(\"Trial complete\")\n          this.calculateCurrentScores()\n          this.saveLevel()\n          this.saveTrials()\n          this.saveNBack()\n          if (this.state.level === 20) {\n            this.openSessionStats()\n            if (this.state.options.saveHistory) {\n              this.saveHistory()\n            }\n          }\n        }\n      )\n    }, 3000)\n  }\n\n  assertVisualMatch = () => {\n    if (this.state.active) {\n      const currentGameSpaces = this.state.currentGameSpaces\n      currentGameSpaces[currentGameSpaces.length - 1].matchAsserted = true\n      this.setState({\n        currentGameSpaces: currentGameSpaces,\n      })\n    }\n  }\n\n  assertAudioMatch = () => {\n    if (this.state.active) {\n      const currentGameSounds = this.state.currentGameSounds\n      currentGameSounds[currentGameSounds.length - 1].matchAsserted = true\n      this.setState({\n        currentGameSounds: currentGameSounds,\n      })\n    }\n  }\n\n  openSessionStats = () => {\n    this.setState({\n      showSessionStats: true,\n    })\n  }\n\n  closeSessionStats = () => {\n    this.setState({\n      showSessionStats: false,\n    })\n  }\n\n  /**\n   * Calculate average audio score for all session trials\n   * Calculate average visual score for all session trials\n   * Calculate max Nback level for all session trials\n   * @returns {Object} session states\n   */\n  calculateSessionStats = () => {\n    const audioScores = this.state.sessionScores.map((obj) => obj.audioScore)\n    const visualScores = this.state.sessionScores.map((obj) => obj.visualScore)\n\n    const audioAverage =\n      audioScores.reduce((acc, curr) => acc + curr, 0) / audioScores.length || 0\n    const visualAverage =\n      visualScores.reduce((acc, curr) => acc + curr, 0) / visualScores.length ||\n      0\n\n    const maxNBack = Math.max(this.state.sessionScores.map((obj) => obj.nBack))\n\n    return {\n      maxNBack,\n      visualAverage,\n      audioAverage,\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <SessionStatsModal\n          closeSessionStats={this.closeSessionStats}\n          open={this.state.showSessionStats}\n          calculateSessionStats={this.calculateSessionStats}\n        />\n        <Header\n          style={{\n            marginLeft: \"18px\",\n            marginTop: \"30px\",\n            display: \"inline-block\",\n          }}\n          as=\"h1\"\n        >\n          Dual N-Back\n        </Header>\n        <Grid relaxed centered style={{ minWidth: \"800px\" }}>\n          <Grid.Column\n            width={3}\n            textAlign=\"left\"\n            style={{\n              marginTop: \"27px\",\n              backgroundColor: \"#E5E5E5\",\n              borderRadius: \"3px\",\n              padding: \"28px\",\n            }}\n          >\n            <p>\n              Visual Score:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentVisualScore}\n              </span>\n            </p>\n            <p>\n              Audio Score:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentAudioScore}\n              </span>\n            </p>\n            <p>\n              Wrong Visual:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentWrongVisualMatches}\n              </span>\n            </p>\n            <p>\n              Missed Visual:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentMissedVisualMatches}\n              </span>\n            </p>\n            <p>\n              Wrong Audio:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentWrongAudioMatches}\n              </span>\n            </p>\n            <p>\n              Missed Audio:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {this.state.currentMissedAudioMatches}\n              </span>\n            </p>\n            <Divider />\n            <ControlsModal />\n            <p>\n              <a\n                style={{ textDecoration: \"underline\" }}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://en.wikipedia.org/wiki/N-back\"\n              >\n                What Is Dual N-Back\n              </a>\n              <Icon name=\"question circle\" />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Grid columns=\"3\" celled style={{ borderRadius: \"3px\" }}>\n              <Grid.Row style={{ height: \"160px\" }}>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[0] ? \"visible-space\" : null}\n                    key={0}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[1] ? \"visible-space\" : null}\n                    key={1}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[2] ? \"visible-space\" : null}\n                    key={2}\n                  ></div>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row style={{ height: \"160px\" }}>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[3] ? \"visible-space\" : null}\n                    key={3}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[4] ? \"visible-space\" : null}\n                    key={4}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[5] ? \"visible-space\" : null}\n                    key={5}\n                  ></div>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row style={{ height: \"160px\" }}>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[6] ? \"visible-space\" : null}\n                    key={6}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[7] ? \"visible-space\" : null}\n                    key={7}\n                  ></div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{ height: \"100%\" }}\n                    className={this.state[8] ? \"visible-space\" : null}\n                    key={8}\n                  ></div>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Grid columns={3} centered>\n              <Grid.Column>\n                <Button\n                  textAlign=\"center\"\n                  onClick={(e) => {\n                    this.assertAudioMatch()\n                    e.target.blur()\n                  }}\n                  fluid\n                  size=\"big\"\n                >\n                  Audio Match\n                </Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button\n                  textAlign=\"center\"\n                  onClick={(e) => {\n                    this.assertAudioMatch()\n                    this.assertVisualMatch()\n                    e.target.blur()\n                  }}\n                  fluid\n                  size=\"big\"\n                >\n                  Dual\n                </Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button\n                  textAlign=\"center\"\n                  onClick={(e) => {\n                    this.assertVisualMatch()\n                    e.target.blur()\n                  }}\n                  fluid\n                  size=\"big\"\n                >\n                  Visual Match\n                </Button>\n              </Grid.Column>\n            </Grid>\n            <Progress\n              size=\"large\"\n              color=\"green\"\n              percent={this.state.trialProgress}\n              style={{ marginTop: \"25px\" }}\n              content={`${this.state.trialProgress}%`}\n            />\n          </Grid.Column>\n          <Grid.Column\n            width={4}\n            mobile={4}\n            style={{\n              marginTop: \"27px\",\n              backgroundColor: \"#E5E5E5\",\n              borderRadius: \"3px\",\n              padding: \"28px\",\n            }}\n          >\n            <p>\n              Level:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>{this.state.level}</span>\n            </p>\n            <p>\n              Number of trails:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>{this.state.trials}</span>\n            </p>\n            <Dropdown\n              simple\n              placeholder=\"N Back\"\n              options={nBackDropDownOptions}\n              value={this.state.nBack}\n              onChange={this.updateNBack}\n            />\n            <Divider />\n            <p>Options</p>\n            <Checkbox\n              key={this.state.options}\n              label=\"Auto-update n-back\"\n              toggle\n              checked={this.state.options.autoUpdateNBack}\n              onChange={(e) => {\n                const { options } = this.state\n                options.autoUpdateNBack = !options.autoUpdateNBack\n                this.setState(\n                  {\n                    options: options,\n                  },\n                  this.saveOptions\n                )\n              }}\n            />\n            <Checkbox\n              label=\"Save history\"\n              toggle\n              style={{ marginTop: \"15px\" }}\n              checked={this.state.options.saveHistory}\n              onChange={(e) => {\n                const { options } = this.state\n                options.saveHistory = !options.saveHistory\n                this.setState(\n                  {\n                    options: options,\n                  },\n                  this.saveOptions\n                )\n              }}\n            />\n          </Grid.Column>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./custom.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}