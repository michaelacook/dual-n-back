{"version":3,"sources":["lib/GameObjectCollection.js","lib/GameObject.js","lib/GameSpace.js","audio/A.wav","audio/B.wav","audio/C.wav","audio/D.wav","audio/E.wav","audio/F.wav","audio/G.wav","audio/H.wav","audio/I.wav","lib/GameSound.js","components/SessionStatsModal.js","components/ControlsModal.js","components/LeftPanel.js","components/GameGrid.js","components/Controls.js","nBackDropDownOptions.js","components/RightPanel.js","App.js","reportWebVitals.js","index.js"],"names":["GameObjectCollection","collection","this","_collection","nback","matches","i","length","cur","matchAsserted","key","possible","prev","missed","_false","GameObject","_matchAsserted","_key","bool","Error","GameSpace","_visible","Math","floor","random","GameSound","file","_sound","Audio","play","sound","A","B","C","D","E","F","G","H","I","SessionStatsModal","open","closeSessionStats","stats","calculateSessionStats","Modal","closeIcon","onClose","size","centered","Header","Icon","name","color","style","display","as","Content","fontWeight","averageNBack","visualAverage","audioAverage","ControlsModal","React","useState","setOpen","onOpen","trigger","textDecoration","cursor","padding","marginTop","lineHeight","target","rel","href","LeftPanel","currentVisualScore","currentAudioScore","currentWrongVisualMatches","currentWrongAudioMatches","currentMissedAudioMatches","currentMissedVisualMatches","Fragment","Divider","GameGrid","state","Grid","columns","celled","borderRadius","Row","height","Column","className","Controls","assertAudioMatch","assertVisualMatch","Button","textAlign","onClick","e","blur","fluid","nBackDropDownOptions","text","value","RightPanel","level","trials","nBack","updateNBack","options","saveOptions","toggleSaveHistory","toggleAutoUpdateNBack","Dropdown","simple","placeholder","onChange","Checkbox","label","toggle","checked","autoUpdateNBack","saveHistory","App","props","Cookies","set","JSON","stringify","expires","setState","saveLevel","saveTrials","saveNBack","sessionHistory","get","parse","scores","date","Date","incrementNBack","prevState","decrementNBack","data","incrementProgressBar","trialProgress","incrementLevel","decrementTrials","resetGame","trails","start","active","iteration","currentGameSpaces","currentGameSounds","runGameTrial","stop","id","setInterval","runTrialIteration","clearInterval","completeGameTrial","space","createRandomGameSpace","createRandomGameSound","push","setTimeout","addSessionScore","visualScore","audioScore","sessionScores","calculateCurrentScores","spaceCollection","soundCollection","possibleVisualMatches","possibleMatches","possibleAudioMatches","wrongVisualMatches","falseMatches","wrongAudioMatches","missedVisualMatches","missedMatches","missedAudioMatches","openSessionStats","showSessionStats","audioScores","map","obj","visualScores","nBackLevels","reduce","acc","curr","showControlsDimmer","Number","0","1","2","3","4","5","6","7","8","document","addEventListener","removeEventListener","console","log","Container","marginLeft","relaxed","minWidth","width","backgroundColor","Progress","percent","content","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69514697.chunk.js","sourcesContent":["/*\nThe GameObjectCollection provides a set of methods \nfor calculating scores from an array of either GameSounds or GameSpaces \n*/\n\nclass GameObjectCollection {\n  constructor(collection = []) {\n    this._collection = collection\n  }\n\n  get collection() {\n    return this._collection\n  }\n\n  /**\n   * Calculate matches from game data\n   * @param {Number} nback - number back from current game iteration to check for matches\n   * @returns {Number}\n   */\n  matches(nback) {\n    let matches = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (prev.key === cur.key) {\n          matches += 1\n        }\n      }\n    }\n    return matches\n  }\n\n  /**\n   * Calculate all possible matches contained in the collection\n   * @param {Number} nback - number back from current game iteration to check for matches\n   * @returns {Number}\n   */\n  possibleMatches(nback) {\n    let possible = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      const prev = this._collection[i - nback]\n      if (cur.key === prev.key) {\n        possible += 1\n      }\n    }\n    return possible\n  }\n\n  /**\n   * Calculate all missed matches in the collection\n   * @param {Number} nback - number back from current game iteration to check for matches\n   */\n  missedMatches(nback) {\n    let missed = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (!cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (cur.key === prev.key) {\n          missed += 1\n        }\n      }\n    }\n    return missed\n  }\n\n  /**\n   * Calculate wrongly asserted matches\n   * @param {Number} nBack - number back from current game iteration to check for false matches\n   * @returns {Number}\n   */\n  falseMatches(nback) {\n    let _false = 0\n    for (let i = nback; i < this._collection.length; i++) {\n      const cur = this._collection[i]\n      if (cur.matchAsserted) {\n        const prev = this._collection[i - nback]\n        if (prev.key !== cur.key) {\n          _false += 1\n        }\n      }\n    }\n    return _false\n  }\n}\n\nexport default GameObjectCollection\n","class GameObject {\n  constructor(key) {\n    this._matchAsserted = null\n    this._key = key\n  }\n\n  set matchAsserted(bool) {\n    if (typeof bool !== \"boolean\") {\n      throw new Error(\"Must be a boolean type\")\n    }\n    this._matchAsserted = bool\n  }\n\n  get matchAsserted() {\n    return this._matchAsserted\n  }\n\n  get key() {\n    return this._key\n  }\n}\n\nexport default GameObject\n","import GameObject from \"./GameObject\"\n\nclass GameSpace extends GameObject {\n  /**\n   * Constructor\n   * @param {Number} key - identifier for game object\n   */\n  constructor(key) {\n    super(key)\n    this._visible = false\n  }\n\n  get index() {\n    return this._key\n  }\n\n  set visible(bool) {\n    if (typeof bool !== \"boolean\") {\n      throw new Error(\"Must pass a boolean\")\n    }\n    this._visible = bool\n  }\n\n  get visible() {\n    return this._visible\n  }\n\n  /**\n   * Generate a GameSpace object with a random key\n   * @returns {Object} created random GameSpace\n   */\n  static createRandomGameSpace() {\n    const key = Math.floor(Math.random() * 9)\n    return new GameSpace(key)\n  }\n}\n\nexport default GameSpace\n","export default __webpack_public_path__ + \"static/media/A.f71bd597.wav\";","export default __webpack_public_path__ + \"static/media/B.e974a562.wav\";","export default __webpack_public_path__ + \"static/media/C.513e6b56.wav\";","export default __webpack_public_path__ + \"static/media/D.4919c469.wav\";","export default __webpack_public_path__ + \"static/media/E.035e9050.wav\";","export default __webpack_public_path__ + \"static/media/F.b24612a7.wav\";","export default __webpack_public_path__ + \"static/media/G.9522d041.wav\";","export default __webpack_public_path__ + \"static/media/H.d051f82b.wav\";","export default __webpack_public_path__ + \"static/media/I.96e7c52f.wav\";","import A from \"../audio/A.wav\"\nimport B from \"../audio/B.wav\"\nimport C from \"../audio/C.wav\"\nimport D from \"../audio/D.wav\"\nimport E from \"../audio/E.wav\"\nimport F from \"../audio/F.wav\"\nimport G from \"../audio/G.wav\"\nimport H from \"../audio/H.wav\"\nimport I from \"../audio/I.wav\"\nimport GameObject from \"./GameObject\"\n\nclass GameSound extends GameObject {\n  constructor(file, key) {\n    super(key)\n    this._sound = new Audio(file)\n  }\n\n  /**\n   * Run sound file\n   */\n  play() {\n    this._sound.play()\n  }\n\n  /**\n   * Generate a random GameSound object\n   * @returns {Object} GameSound\n   */\n  static createRandomGameSound() {\n    const files = [\n      { sound: A, key: \"A\" },\n      { sound: B, key: \"B\" },\n      { sound: C, key: \"C\" },\n      { sound: D, key: \"D\" },\n      { sound: E, key: \"E\" },\n      { sound: F, key: \"F\" },\n      { sound: G, key: \"G\" },\n      { sound: H, key: \"H\" },\n      { sound: I, key: \"I\" },\n    ]\n\n    const file = files[Math.floor(Math.random() * 9)]\n\n    return new GameSound(file.sound, file.key)\n  }\n}\n\nexport default GameSound\n","import React from \"react\"\nimport { Header, Modal, Icon } from \"semantic-ui-react\"\n\nexport default function SessionStatsModal({\n  open,\n  closeSessionStats,\n  calculateSessionStats,\n}) {\n  const stats = calculateSessionStats()\n\n  return (\n    <Modal\n      closeIcon\n      onClose={() => closeSessionStats()}\n      open={open}\n      size=\"small\"\n      centered={false}\n    >\n      <Modal.Header>\n        <Icon name=\"check circle\" color=\"green\" size=\"big\" />\n        <Header style={{ display: \"inline-block\" }} as=\"h2\">\n          Session Complete!\n        </Header>\n      </Modal.Header>\n      <Modal.Content>\n        <p>\n          Great work! You have completed 20 sessions. Give your brain and rest\n          and come back tomorrow for your next memory workout.\n        </p>\n\n        <Header as=\"h3\">Session Breakdown:</Header>\n        <ul>\n          <li>\n            {\" \"}\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Average N-Back level</span>:{\" \"}\n              {stats.averageNBack}\n            </p>\n          </li>\n          <li>\n            {\" \"}\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Average visual score</span>:{\" \"}\n              {stats.visualAverage}\n            </p>\n          </li>\n          <li>\n            <p>\n              <span style={{ fontWeight: \"Bold\" }}>Average audio score</span>:{\" \"}\n              {stats.audioAverage}\n            </p>\n          </li>\n        </ul>\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React from \"react\"\nimport { Header, Modal, Icon } from \"semantic-ui-react\"\n\nexport default function ControlsModal() {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      closeIcon\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      centered={false}\n      size=\"large\"\n      trigger={\n        <span>\n          <p\n            style={{\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n            }}\n          >\n            How to play\n          </p>\n          <Icon name=\"question circle\" />\n        </span>\n      }\n    >\n      <Modal.Header>\n        <Header style={{ display: \"inline-block\" }} as=\"h1\">\n          How To Play\n        </Header>\n      </Modal.Header>\n      <Modal.Content style={{ padding: \"25px\" }}>\n        <Header as=\"h2\">Controls</Header>\n        <ul>\n          <li>Press Spacebar to start the game</li>\n          <li>Press ESC to stop before trial is complete</li>\n        </ul>\n\n        <Header style={{ marginTop: \"20px\" }} as=\"h2\">\n          How To Play\n        </Header>\n        <ul>\n          <li>\n            <p style={{ lineHeight: \"1.5\" }}>\n              The game requires the player to watch a series of flashing spaces\n              on a grid, while simultaneously listening to a series of sounds.\n              The player must match the last shown grid space and the last\n              played sound with the grid space and sound N iterations back in\n              the sequence. For instance, if the last sound played was \"B\" and\n              the current N-back level is 2, then you must try to remember if\n              the sound played two backward in the sequence was also \"B\" and if\n              so, assert a match.\n            </p>\n          </li>\n          <li>\n            <p style={{ lineHeight: \"1.5\" }}>\n              Each game trial consists of twenty-five random sounds and random\n              grid space flashes and lasts approximately 75 seconds. A full game\n              session consists of twenty game trials and takes approximately 25\n              minutes to complete. At the end of each session, the player's\n              average visual and audio scores as well as average n-back level\n              are calculated. For best results, complete one full game session\n              each day.\n            </p>\n          </li>\n          <li>\n            <p style={{ lineHeight: \"1.5\" }}>\n              For more information about working memory and a useful tutorial,\n              view{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://www.youtube.com/watch?v=uOncXapT-j4&ab_channel=MarkAshtonSmith%2CPh.D.\"\n              >\n                this YouTube video.\n              </a>\n            </p>\n          </li>\n        </ul>\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React from \"react\"\nimport { Divider, Icon } from \"semantic-ui-react\"\nimport ControlsModal from \"./ControlsModal\"\n\nexport default function LeftPanel({\n  currentVisualScore,\n  currentAudioScore,\n  currentWrongVisualMatches,\n  currentWrongAudioMatches,\n  currentMissedAudioMatches,\n  currentMissedVisualMatches,\n}) {\n  return (\n    <React.Fragment>\n      <p>\n        Visual Score:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentVisualScore}</span>\n      </p>\n      <p>\n        Audio Score:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentAudioScore}</span>\n      </p>\n      <p>\n        Wrong Visual:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentWrongVisualMatches}</span>\n      </p>\n      <p>\n        Missed Visual:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentMissedVisualMatches}</span>\n      </p>\n      <p>\n        Wrong Audio:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentWrongAudioMatches}</span>\n      </p>\n      <p>\n        Missed Audio:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{currentMissedAudioMatches}</span>\n      </p>\n      <Divider />\n      <ControlsModal />\n      <p>\n        <a\n          style={{ textDecoration: \"underline\" }}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://en.wikipedia.org/wiki/N-back\"\n        >\n          What Is Dual N-Back\n        </a>\n        <Icon name=\"question circle\" />\n      </p>{\" \"}\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport { Grid } from \"semantic-ui-react\"\n\nexport default function GameGrid({ state }) {\n  return (\n    <Grid columns=\"3\" celled style={{ borderRadius: \"3px\" }}>\n      <Grid.Row style={{ height: \"160px\" }}>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[0] ? \"visible-space\" : null}\n            key={0}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[1] ? \"visible-space\" : null}\n            key={1}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[2] ? \"visible-space\" : null}\n            key={2}\n          ></div>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ height: \"160px\" }}>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[3] ? \"visible-space\" : null}\n            key={3}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[4] ? \"visible-space\" : null}\n            key={4}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[5] ? \"visible-space\" : null}\n            key={5}\n          ></div>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ height: \"160px\" }}>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[6] ? \"visible-space\" : null}\n            key={6}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[7] ? \"visible-space\" : null}\n            key={7}\n          ></div>\n        </Grid.Column>\n        <Grid.Column>\n          <div\n            style={{ height: \"100%\" }}\n            className={state[8] ? \"visible-space\" : null}\n            key={8}\n          ></div>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { Button, Grid } from \"semantic-ui-react\"\n\nexport default function Controls({ assertAudioMatch, assertVisualMatch }) {\n  return (\n    <Grid columns={3} centered>\n      <Grid.Column>\n        <Button\n          textAlign=\"center\"\n          onClick={(e) => {\n            assertAudioMatch()\n            e.target.blur()\n          }}\n          fluid\n          size=\"big\"\n        >\n          Audio Match\n        </Button>\n      </Grid.Column>\n      <Grid.Column>\n        <Button\n          textAlign=\"center\"\n          onClick={(e) => {\n            assertAudioMatch()\n            assertVisualMatch()\n            e.target.blur()\n          }}\n          fluid\n          size=\"big\"\n        >\n          Dual\n        </Button>\n      </Grid.Column>\n      <Grid.Column>\n        <Button\n          textAlign=\"center\"\n          onClick={(e) => {\n            assertVisualMatch()\n            e.target.blur()\n          }}\n          fluid\n          size=\"big\"\n        >\n          Visual Match\n        </Button>\n      </Grid.Column>\n    </Grid>\n  )\n}\n","const nBackDropDownOptions = [\n  {\n    key: 0,\n    text: \"1 Back\",\n    value: 1,\n  },\n  {\n    key: 1,\n    text: \"2 Back\",\n    value: 2,\n  },\n  {\n    key: 2,\n    text: \"3 Back\",\n    value: 3,\n  },\n  {\n    key: 3,\n    text: \"4 Back\",\n    value: 4,\n  },\n  {\n    key: 4,\n    text: \"5 Back\",\n    value: 5,\n  },\n  {\n    key: 5,\n    text: \"6 Back\",\n    value: 6,\n  },\n  {\n    key: 6,\n    text: \"7 Back\",\n    value: 7,\n  },\n  {\n    key: 7,\n    text: \"8 Back\",\n    value: 8,\n  },\n  {\n    key: 8,\n    text: \"9 Back\",\n    value: 9,\n  },\n  {\n    key: 9,\n    text: \"10 Back\",\n    value: 10,\n  },\n  {\n    key: 10,\n    text: \"11 Back\",\n    value: 11,\n  },\n  {\n    key: 11,\n    text: \"12 Back\",\n    value: 12,\n  },\n]\n\nexport default nBackDropDownOptions\n","import React from \"react\"\nimport { Checkbox, Dropdown, Divider } from \"semantic-ui-react\"\nimport nBackDropDownOptions from \"../nBackDropDownOptions\"\n\nexport default function RightPanel({\n  level,\n  trials,\n  nBack,\n  updateNBack,\n  options,\n  saveOptions,\n  toggleSaveHistory,\n  toggleAutoUpdateNBack,\n}) {\n  return (\n    <React.Fragment>\n      <p>\n        Level: <span style={{ fontWeight: \"bold\" }}>{level}</span>\n      </p>\n      <p>\n        Number of trails: <span style={{ fontWeight: \"bold\" }}>{trials}</span>\n      </p>\n      <Dropdown\n        simple\n        placeholder=\"N Back\"\n        options={nBackDropDownOptions}\n        value={nBack}\n        onChange={updateNBack}\n      />\n      <Divider />\n      <p>Options</p>\n      <Checkbox\n        key={options}\n        label=\"Auto-update n-back\"\n        toggle\n        checked={options.autoUpdateNBack}\n        onChange={(e) => {\n          toggleAutoUpdateNBack()\n          saveOptions()\n        }}\n      />\n      <Checkbox\n        label=\"Save history\"\n        toggle\n        style={{ marginTop: \"15px\" }}\n        checked={options.saveHistory}\n        onChange={(e) => {\n          toggleSaveHistory()\n          saveOptions()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n","import React, { Component } from \"react\"\nimport { Container, Grid, Header, Progress } from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport GameObjectCollection from \"./lib/GameObjectCollection\"\nimport GameSpace from \"./lib/GameSpace\"\nimport GameSound from \"./lib/GameSound\"\nimport SessionStatsModal from \"./components/SessionStatsModal\"\nimport LeftPanel from \"./components/LeftPanel\"\nimport GameGrid from \"./components/GameGrid\"\nimport Controls from \"./components/Controls\"\nimport RightPanel from \"./components/RightPanel\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showControlsDimmer: true,\n      showSessionStats: false,\n      active: false,\n      nBack: Number(Cookies.get(\"nBack\")) || 2,\n      iteration: -1,\n      level: Number(Cookies.get(\"level\")) || 0,\n      trials: Number(Cookies.get(\"trials\")) || 20,\n      currentVisualScore: 0,\n      currentAudioScore: 0,\n      currentMissedVisualMatches: 0,\n      currentMissedAudioMatches: 0,\n      currentWrongVisualMatches: 0,\n      currentWrongAudioMatches: 0,\n      currentGameSpaces: [],\n      currentGameSounds: [],\n      trialProgress: 0,\n      sessionScores: [],\n      options: Cookies.get(\"options\")\n        ? JSON.parse(Cookies.get(\"options\"))\n        : {\n            autoUpdateNBack: true,\n            saveHistory: false,\n          },\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.start)\n    document.addEventListener(\"keydown\", this.stop)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.start)\n    document.removeEventListener(\"keydown\", this.stop)\n  }\n\n  saveOptions = () => {\n    Cookies.set(\"options\", JSON.stringify(this.state.options), { expires: 365 })\n  }\n\n  /**\n   * Switch value of this.state.options.saveHistory\n   */\n  toggleSaveHistory = () => {\n    const { options } = this.state\n    options.saveHistory = !options.saveHistory\n    this.setState({\n      options,\n    })\n  }\n\n  /**\n   * Switch value of this.state.options.autoUpdateNBack\n   */\n  toggleAutoUpdateNBack = () => {\n    const { options } = this.state\n    options.autoUpdateNBack = !options.autoUpdateNBack\n    this.setState({\n      options,\n    })\n  }\n\n  saveLevel = () => {\n    Cookies.set(\"level\", this.state.level)\n  }\n\n  saveTrials = () => {\n    Cookies.set(\"trials\", this.state.trials)\n  }\n\n  saveNBack = () => {\n    Cookies.set(\"nBack\", this.state.nBack)\n  }\n\n  /**\n   * Save session scores and current date to a cookie\n   */\n  saveHistory = () => {\n    const sessionHistory = Cookies.get(\"sessionHistory\")\n      ? [\n          ...JSON.parse(Cookies.get(\"sessionHistory\")),\n          {\n            scores: this.calculateSessionStats(),\n            date: new Date(),\n          },\n        ]\n      : [\n          {\n            scores: this.calculateSessionStats(),\n            date: new Date(),\n          },\n        ]\n    Cookies.set(\"sessionHistory\", JSON.stringify(sessionHistory), {\n      expires: 365,\n    })\n  }\n\n  incrementNBack = () => {\n    this.setState((prevState) => ({\n      nBack: prevState.nBack + 1,\n    }))\n  }\n\n  decrementNBack = () => {\n    if (this.state.nBack > 1) {\n      this.setState((prevState) => ({\n        nBack: prevState.nBack - 1,\n      }))\n    }\n  }\n\n  updateNBack = (e, data) => {\n    this.setState({\n      nBack: data.value,\n    })\n  }\n\n  incrementProgressBar = () => {\n    this.setState((prevState) => ({\n      trialProgress: prevState.trialProgress + 4,\n    }))\n  }\n\n  incrementLevel = () => {\n    this.setState((prevState) => ({\n      level: prevState.level + 1,\n    }))\n  }\n\n  decrementTrials = () => {\n    if (this.state.trials > 0) {\n      this.setState((prevState) => ({\n        trials: prevState.trials - 1,\n      }))\n    }\n  }\n\n  /**\n   * Reset game back to initial state\n   * To be run when user completes game session\n   */\n  resetGame = () => {\n    this.setState(\n      {\n        level: 0,\n        trails: 0,\n        nBack: 2,\n      },\n      () => {\n        this.saveLevel()\n        this.saveTrials()\n        this.saveNBack()\n      }\n    )\n  }\n\n  /**\n   * Set game state to active, start the game trial\n   * @param {Object} e - SyntheticEvent\n   */\n  start = (e) => {\n    if (!this.state.active) {\n      if (e.key === \" \" || e.key === 32) {\n        this.setState(\n          {\n            active: true,\n            iteration: -1,\n            currentVisualScore: 0,\n            currentAudioScore: 0,\n            currentMissedVisualMatches: 0,\n            currentMissedAudioMatches: 0,\n            currentWrongAudioMatches: 0,\n            currentWrongVisualMatches: 0,\n            currentGameSpaces: [],\n            currentGameSounds: [],\n            trialProgress: 0,\n          },\n          () => {\n            this.incrementLevel()\n            this.decrementTrials()\n            this.runGameTrial()\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * Set active state to false to prevent next game trail iteration\n   * @param {Object} e - SyntheticEvent\n   */\n  stop = (e) => {\n    if (this.state.active) {\n      if (e.key === \"Escape\" || e.key === 27) {\n        this.setState({\n          active: false,\n        })\n      }\n    }\n  }\n\n  /**\n   * Run a series of 24 game trials\n   * Each iteration updates the iteration state and increments the progress bar\n   */\n  runGameTrial = () => {\n    const id = setInterval(() => {\n      this.setState(\n        (prevState) => ({\n          iteration: prevState.iteration + 1,\n        }),\n        this.runTrialIteration\n      )\n      if (this.state.iteration === 24 || !this.state.active) {\n        clearInterval(id)\n        this.completeGameTrial()\n      }\n    }, 3000)\n  }\n\n  /**\n   * Run a single trial iteration\n   * Makes a random space visible and plays a random game sound, then adds both to a collection\n   * One game iteration actually consists of a space iteration and a sound iteration\n   * A space becomes visible for 1 second, and a sound is played\n   */\n  runTrialIteration = () => {\n    const space = GameSpace.createRandomGameSpace()\n    const sound = GameSound.createRandomGameSound()\n    const key = space.key\n    const currentGameSpaces = this.state.currentGameSpaces\n    const currentGameSounds = this.state.currentGameSounds\n    currentGameSounds.push(sound)\n    currentGameSpaces.push(space)\n    this.setState(\n      {\n        [key]: true,\n        currentGameSpaces: currentGameSpaces,\n        currentGameSounds: currentGameSounds,\n      },\n      () => {\n        sound.play()\n      }\n    )\n    setTimeout(() => {\n      this.setState(\n        {\n          [key]: false,\n        },\n        () => {\n          this.incrementProgressBar()\n        }\n      )\n    }, 1200)\n  }\n\n  /**\n   * Save current trial scores to state\n   * @param {Number} nBack\n   * @param {Number} visualScore\n   * @param {Number} audioScore\n   */\n  addSessionScore = (nBack, visualScore, audioScore) => {\n    this.setState((prevState) => ({\n      sessionScores: [\n        ...prevState.sessionScores,\n        { nBack, visualScore, audioScore },\n      ],\n    }))\n  }\n\n  /**\n   * Calculate visual and audio scores from most recent game trial and set to state\n   * Increment or decrement nBack based on calculated scores\n   * Each wrongly asserted match results in a 5% reduction in score\n   */\n  calculateCurrentScores = () => {\n    const nBack = this.state.nBack\n    const spaceCollection = new GameObjectCollection(\n      this.state.currentGameSpaces\n    )\n    const soundCollection = new GameObjectCollection(\n      this.state.currentGameSounds\n    )\n\n    const possibleVisualMatches = spaceCollection.possibleMatches(nBack)\n    const possibleAudioMatches = soundCollection.possibleMatches(nBack)\n\n    const wrongVisualMatches = spaceCollection.falseMatches(nBack)\n    const wrongAudioMatches = soundCollection.falseMatches(nBack)\n\n    const visualScore =\n      Math.floor(\n        (spaceCollection.matches(nBack) / possibleVisualMatches) * 100\n      ) -\n        wrongVisualMatches * 5 || 0\n    const audioScore =\n      Math.floor(\n        (soundCollection.matches(nBack) / possibleAudioMatches) * 100\n      ) -\n        wrongAudioMatches * 5 || 0\n\n    const missedVisualMatches = spaceCollection.missedMatches(nBack)\n    const missedAudioMatches = soundCollection.missedMatches(nBack)\n\n    this.addSessionScore(nBack, visualScore, audioScore)\n\n    this.setState({\n      currentVisualScore: visualScore > 0 ? `${visualScore}%` : 0,\n      currentAudioScore: audioScore > 0 ? `${audioScore}%` : 0,\n      currentMissedVisualMatches: missedVisualMatches,\n      currentMissedAudioMatches: missedAudioMatches,\n      currentWrongVisualMatches: wrongVisualMatches,\n      currentWrongAudioMatches: wrongAudioMatches,\n    })\n\n    if (this.state.options.autoUpdateNBack) {\n      if (visualScore >= 70 && audioScore >= 70) {\n        this.incrementNBack()\n      }\n\n      if (visualScore < 40 && audioScore < 40 && this.state.nBack > 2) {\n        this.decrementNBack()\n      }\n    }\n  }\n\n  /**\n   * On completion of game trial create instances of GameSpaceCollection and GameSoundCollection\n   * For calculation of scores\n   */\n  completeGameTrial() {\n    setTimeout(() => {\n      this.setState(\n        {\n          active: false,\n        },\n        () => {\n          console.log(\"Trial complete\")\n          this.calculateCurrentScores()\n          this.saveLevel()\n          this.saveTrials()\n          this.saveNBack()\n          if (this.state.level === 20) {\n            this.openSessionStats()\n            this.resetGame()\n            if (this.state.options.saveHistory) {\n              this.saveHistory()\n            }\n          }\n        }\n      )\n    }, 3000)\n  }\n\n  assertVisualMatch = () => {\n    if (this.state.active) {\n      const currentGameSpaces = this.state.currentGameSpaces\n      currentGameSpaces[currentGameSpaces.length - 1].matchAsserted = true\n      this.setState({\n        currentGameSpaces: currentGameSpaces,\n      })\n    }\n  }\n\n  assertAudioMatch = () => {\n    if (this.state.active) {\n      const currentGameSounds = this.state.currentGameSounds\n      currentGameSounds[currentGameSounds.length - 1].matchAsserted = true\n      this.setState({\n        currentGameSounds: currentGameSounds,\n      })\n    }\n  }\n\n  openSessionStats = () => {\n    this.setState({\n      showSessionStats: true,\n    })\n  }\n\n  closeSessionStats = () => {\n    this.setState({\n      showSessionStats: false,\n    })\n  }\n\n  /**\n   * Calculate average audio score for all session trials\n   * Calculate average visual score for all session trials\n   * Calculate max Nback level for all session trials\n   * @returns {Object} session states\n   */\n  calculateSessionStats = () => {\n    const audioScores = this.state.sessionScores.map((obj) => obj.audioScore)\n    const visualScores = this.state.sessionScores.map((obj) => obj.visualScore)\n    const nBackLevels = this.state.sessionScores.map((obj) => obj.nBack)\n\n    const audioAverage =\n      audioScores.reduce((acc, curr) => acc + curr, 0) / audioScores.length || 0\n    const visualAverage =\n      visualScores.reduce((acc, curr) => acc + curr, 0) / visualScores.length ||\n      0\n    const averageNBack =\n      nBackLevels.reduce((acc, curr) => acc + curr, 0) / nBackLevels.length || 2\n\n    return {\n      averageNBack,\n      visualAverage,\n      audioAverage,\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <SessionStatsModal\n          closeSessionStats={this.closeSessionStats}\n          open={this.state.showSessionStats}\n          calculateSessionStats={this.calculateSessionStats}\n        />\n        <Header\n          style={{\n            marginLeft: \"18px\",\n            marginTop: \"30px\",\n            display: \"inline-block\",\n          }}\n          as=\"h1\"\n        >\n          Dual N-Back\n        </Header>\n        <Grid relaxed centered style={{ minWidth: \"1169px\" }}>\n          <Grid.Column\n            width={3}\n            textAlign=\"left\"\n            style={{\n              marginTop: \"27px\",\n              backgroundColor: \"#E5E5E5\",\n              borderRadius: \"3px\",\n              padding: \"28px\",\n            }}\n          >\n            <LeftPanel\n              currentVisualScore={this.state.currentVisualScore}\n              currentAudioScore={this.state.currentAudioScore}\n              currentWrongVisualMatches={this.state.currentWrongVisualMatches}\n              currentWrongAudioMatches={this.state.currentWrongAudioMatches}\n              currentMissedAudioMatches={this.state.currentMissedAudioMatches}\n              currentMissedVisualMatches={this.state.currentMissedVisualMatches}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <GameGrid state={this.state} />\n            <Controls\n              assertVisualMatch={this.assertVisualMatch}\n              assertAudioMatch={this.assertAudioMatch}\n            />\n            <Progress\n              size=\"large\"\n              color=\"green\"\n              percent={this.state.trialProgress}\n              style={{ marginTop: \"25px\" }}\n              content={`${this.state.trialProgress}%`}\n            />\n          </Grid.Column>\n          <Grid.Column\n            width={4}\n            style={{\n              marginTop: \"27px\",\n              backgroundColor: \"#E5E5E5\",\n              borderRadius: \"3px\",\n              padding: \"28px\",\n            }}\n          >\n            <RightPanel\n              level={this.state.level}\n              trials={this.state.trials}\n              nBack={this.state.nBack}\n              updateNBack={this.updateNBack}\n              options={this.state.options}\n              saveOptions={this.saveOptions}\n              toggleSaveHistory={this.toggleSaveHistory}\n              toggleAutoUpdateNBack={this.toggleAutoUpdateNBack}\n            />\n          </Grid.Column>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./custom.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}